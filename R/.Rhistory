?gub
?gsub
x <- 1:3
y <- 12:14
m <- rbind(x,y)
m
<- cbind(y,x)
n
n <- cbind(y,x)
n
?unclass
?read.table
y <- data.frame(a=1, b="a")
dput(y)
x <- "foo"
y <- data.frame(a=1, b="a")
dump(c("x","y"))
# Ver los argumentos de las funciones
str(file)
?file
al, y sirve para elegir mas de un elemento. Ej:
x <- 1:15
x[x>5]
x <- list(foo=1:4, bar=0.6, baz="hello")
x[c(1,3)]
gs4_auth()
# Acceder a planillas en Google Sheets
library(googlesheets4)
install.packages("googlesheets4")
# Acceder a planillas en Google Sheets
library(googlesheets4)
gs4_auth()
?read_csv
??read_csv
??readr
??readr::read_csv
install.packages("readr")
??read_csv
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("RSQLite")
install.packages("dbplyr")
?anti_join
install.packages("rvest")
db <- read_csv(path="C:\Users\juanb\Downloads\CAPIV_Produccion.csv", n_max=10)
db <- read_csv(path="C:/Users/juanb/Downloads/CAPIV_Produccion.csv", n_max=10)
db <- readr::read_csv(path="C:/Users/juanb/Downloads/CAPIV_Produccion.csv", n_max=10)
db <- readr::read_csv("C:/Users/juanb/Downloads/CAPIV_Produccion.csv", n_max=10)
View(db)
?paste0
# HTTP is based on a number of important verbs : GET(), HEAD(), PATCH(), PUT(), DELETE(), and POST().
# Blog "Using R to extract data from web APIs": https://www.tylerclavelle.com/code/2017/randapis/
## Save GitHub username as variable
username <- 'janeeverydaydoe'
## Save base endpoint as variable
url_git <- 'https://api.github.com/'
paste0(url_git, 'users/', username, '/repos')
# Pegar / concatenar / unir los elementos de un vector
my_char <-c('My', 'name', 'is')
paste(my_char, collapse = " ")
paste0("Hello", "world!")
install.packages("magick")
# Lidiar con imagenes
library(magick){
img1 <- image_read("https://ggplot2.tidyverse.org/logo.png")
print(img1)
}
library(magick)
img1 <- image_read("https://ggplot2.tidyverse.org/logo.png")
print(img1)
cat(image_ocr(img1))
install.packages("tesseract")
cat(image_ocr(img1))
